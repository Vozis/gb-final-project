version: '3.9'

services:
  # Server app
  server:
    container_name: final-project-server
    volumes:
      - application-server:/usr/src/app
      - mono-node-modules:/usr/src/app/node_modules
      - final-app-upload-files:/usr/src/app/assets
    build:
      dockerfile: ./apps/server/Dockerfile
      target: prod
      context: .
    env_file:
      - ./apps/server/.env
    stdin_open: true
    tty: true
    ports:
      - "4300:4300"
      - "465:465"
    expose:
      - 4300
    networks:
      - project-network
      - final-project-common-network
  #    command: npm run server

  # React app
  web:
    container_name: final-project-web
    volumes:
      - application-web:/usr/src/app
      - mono-node-modules:/usr/src/app/node_modules
    build:
      dockerfile: ./apps/web/Dockerfile
      target: prod
      context: .
    stdin_open: true
    tty: true
    env_file:
      - ./apps/web/.env
#    environment:
#      NX_SOCKET_HOST: ${NX_SOCKET_HOST}
    ports:
      - "4200:4200"
    expose:
      - 4200
    networks:
      - project-network
      - final-project-common-network
    depends_on:
      - server
    links:
      - server

  redis:
    image: 'redis:alpine'
    container_name: 'redis'
    restart: always
    ports:
      - '6379:6379'
    networks:
      - project-network
      - final-project-common-network
    volumes:
      - sport-redis-data:/data
    depends_on:
      - server

  redis-commander:
    container_name: 'redis-commander'
    image: 'ghcr.io/joeferner/redis-commander:latest'
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    restart: always
    networks:
      - project-network
      - final-project-common-network
    depends_on:
      - redis
      - server

volumes:
  mono-node-modules: null
  final-app-upload-files:
  application-web:
  application-server:
  sport-redis-data:


networks:
  project-network:
  final-project-common-network:
    external: true



