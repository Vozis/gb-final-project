generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  email       String  @unique
  isConfirmed Boolean @default(false)
  password    String  @db.VarChar(200)
  firstName   String  @map("first_name")
  lastName    String  @map("last_name")
  userName    String  @unique @map("user_name")
  avatarPath  String  @default("/assets/default-avatar.png") @map("avatar_path")
  role        Role[]

  hobbies Tag[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  creations Event[] @relation("creations")
  events    Event[] @relation("events")
  favorites Event[] @relation("favorites")

  friends         User[] @relation("userFriends")
  friendsRelation User[] @relation("userFriends")

  // eventsList UsersOnEvents[]
  @@map("users")
}

model TypeTag {
  id   Int    @id @default(autoincrement())
  name String @unique

  tag Tag[]

  @@map("type_tags")
}

model Tag {
  id        Int    @id @default(autoincrement())
  name      String
  shortName String @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  type   TypeTag @relation(fields: [typeId], references: [id])
  typeId Int     @default(1) @map("type_id")

  users  User[]
  events Event[]

  @@map("tags")
}

model Event {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  imageUrl    String  @default("/assets/default-event.png") @map("image_url")
  coordinateX String? @map("coordinate_x")
  coordinateY String? @map("coordinate_y")

  eventTime DateTime?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  tags             Tag[]
  users            User[] @relation("events")
  usersOfFavorites User[] @relation("favorites")

  creator   User? @relation("creations", fields: [creatorId], references: [id])
  creatorId Int?

  // usersList UsersOnEvents[]
  @@map("events")
}

// model UsersOnEvents {
//   user       Users    @relation(fields: [userId], references: [id])
//   userId     Int // relation scalar field (used in the `@relation` attribute above)
//   event      Events   @relation(fields: [eventId], references: [id])
//   eventId    Int // relation scalar field (used in the `@relation` attribute above)
//   assignedAt DateTime @default(now())
//   assignedBy String
//
//   @@id([userId, eventId])
// }

enum Role {
  USER
  ADMIN
}
